import Head from "next/head";
import { api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime"
import { SideBar } from "~/components/sidebar";
import { MobileHeader } from "~/components/mobileheader";
import { createServerSideHelpers } from '@trpc/react-query/server';
import superjson from 'superjson';
import { prisma } from "~/server/db";
import { appRouter } from "~/server/api/root";
import type { GetStaticProps, NextPage } from "next";
import Image from "next/image";
import { LoadingSpinner } from "~/components/loading";
import PostView from "~/components/postview";
import { IoIosArrowRoundBack } from "react-icons/io";
import Link from "next/link";
dayjs.extend(relativeTime);



export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = createServerSideHelpers({
    router: appRouter,
    ctx: { prisma, userId: null },
    transformer: superjson, // optional - adds superjson serialization
  });

  const slug = context.params?.slug;

  if (typeof slug !== "string") {
    throw new Error("No slug");
  }

  const username = slug.replace("@", "");

  await ssg.profile.getUserByUsername.prefetch({ username });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    },
  }
};

export const getStaticPaths = () => {
  return {
    paths: [],
    fallback: "blocking",
  }
}

const ProfileFeed = (props: { userId: string }) => {

  const { data, isLoading } = api.posts.getByUserId.useQuery({ userId: props.userId });

  if (isLoading) return <LoadingSpinner />;

  return (
    <div className="flex flex-col gap-4 mt-6">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} isFullPost={false} />))}
    </div>
  )

};


const ProfilePage: NextPage<{ username: string }> = () => {

  const { data } = api.profile.getUserByUsername.useQuery({
    username: "chayesss"
  });

  // return empty div if data not loaded
  if (!data) return <div>404</div>;



  return (
    <>
      <Head>
        <title>{`@${data.username || ""} / KBDSpace`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main>
        <div>
          <MobileHeader />
        </div>
        <div className="flex flex-col sm:flex-row justify-center h-full gap-4 m-4 pt-16 lg:pt-0">
          <div className="hidden lg:block flex-shrink-0 w-[22rem] mr-4 h-screen overflow-y-auto">
            <SideBar />
          </div>
          <div className="w-full max-w-6xl ">
            <div >
              <div className="mr-2 flex flex-row hover:underline items-center pb-6">
                <Link href="/" className="w-[8rem] text-slate-100 flex flex-row items-center text-lg gap-2">
                  <IoIosArrowRoundBack size={24} /><p>Go back</p>
                </Link>
              </div>
              <div className="flex flex-row gap-4 pb-6 border-b border-slate-700 ">

                <Image
                  src={data.profileImageUrl}
                  alt="pfp"
                  className="rounded-full w-16 h-16"
                  width={128}
                  height={128}
                />
                <div>
                  <div>
                    <h1 className="text-2xl text-white tracking-widest font-bold">{data.fullname}</h1>
                  </div>
                  <div>
                    <h1 className="text-2xl text-slate-300 tracking-wider font-thin">{`@${data.username || ""}`}</h1>
                  </div>
                </div>
              </div>
            </div>
            <div>
              <ProfileFeed userId={data.id} />
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export default ProfilePage;
